var tab_counter = {};
var tabs = {};
var allow_infected = [];

chrome.runtime.onInstalled.addListener(function(details) {
    if (details.reason == "install") {
        localStorage.setItem("ads", 0);
        localStorage.setItem("option-notify", 1);
        localStorage.setItem("option-seen", 0);
        localStorage.setItem("option-typing", 0);
        localStorage.setItem("option-antilike", 0);
    }

});


chrome.browserAction.setBadgeBackgroundColor({
    color: [255, 0, 0, 255]
});


chrome.tabs.query({}, function(results) {
    results.forEach(function(tab) {
        tabs[tab.id] = tab;
    });
});


function onUpdatedListener(tabId, changeInfo, tab) {
    tabs[tab.id] = tab;
}

function onRemovedListener(tabId) {
    delete tabs[tabId];
}

chrome.tabs.onActivated.addListener(function(tabId, changeInfo, tab) {

    var count = tab_counter[tabId['tabId']];
    if (typeof count == "undefined" || count == 0) count = '';
    chrome.browserAction.setBadgeText({
        text: String(count)
    });

})

chrome.tabs.onRemoved.addListener(onRemovedListener);

chrome.tabs.onUpdated.addListener(function(tabId, changeInfo, tab) {
    onUpdatedListener(tabId, changeInfo, tab);

    var fb_redirect = chrome.extension.getURL("fb-block/fb-block.html");
    var infected_sites = ['jklm6hsvecfs.ml', 'otat.pw', 'lefi.pw', '8vui.us', 'securetabs.website','activitypage.info','toy.kop.design'];
    var fb_block_key = get_block_key();
    var hash_key = "#fb-anti-malware=" + fb_block_key;
    var _current_url = getLocation(tab.url);


    if (_current_url.hash == hash_key && allow_infected.indexOf(_current_url.host.toLowerCase()) == -1) {
        allow_infected.push(_current_url.host.toLowerCase());
    };

    for (var i = 0; i < infected_sites.length; i++) {

        if (_current_url.host.toLowerCase().indexOf(infected_sites[i]) !== -1 && _current_url.hash != hash_key && allow_infected.indexOf(_current_url.host.toLowerCase()) == -1) {
            fb_redirect += "#" + tab.url.replace(getLocation(tab.url).hash, '') + hash_key;
            chrome.tabs.update(tab.id, {
                url: fb_redirect
            });
            break;
        }
    }
    chrome.tabs.sendMessage(tabId, {
        name: "get_fb_count"
    }, function(response) {

        if (typeof(response) != "undefined") {
            var _count = 0;
            if (response.hasOwnProperty('fb_count')) _count = response.fb_count;
            tab_counter[tabId] = parseInt(_count);
            if (_count == 0) _count = '';
            chrome.browserAction.setBadgeText({
                text: String(_count)
            });
        } else {
            tab_counter[tabId] = 0;
            chrome.browserAction.setBadgeText({
                text: String('')
            });
        }

    });


});



chrome.extension.onRequest.addListener(function(request, sender, sendResponse) {

    if (!request.name) return;
    var current_tab_id = sender.tab.id;
    if (request.name == "info") {

        if (typeof getProperty(tab_counter, current_tab_id) == "undefined") {
            tab_counter[current_tab_id] = request.value;
            add_to_storage(request.value);
        } else {

            var _subtract = parseInt(request.value) - parseInt(tab_counter[current_tab_id]);
            tab_counter[current_tab_id] = request.value;
            if (request && request.value) {
                if (_subtract == 0) _subtract = 1;
                add_to_storage(_subtract);

            }
        }
        chrome.browserAction.setBadgeText({
            text: String(tab_counter[current_tab_id]),
			tabId: current_tab_id
        });
    }

    if (request.name == "get_key") {
        var key = get_local_key();
        if (key == undefined) {
            set_local_key(request.value);
            key = request.value;
        }
        var ads = localStorage.getItem('ads');
        var antilike = localStorage.getItem('option-antilike');
        if (ads == undefined) ads = 1;
        if (antilike == undefined) antilike = 0;

        sendResponse({
            key: key,
            ads: ads,
            removeFrames: antilike
        });
    }

});


if (typeof jQuery == "function") {
    $(document).ready(function() {
        $('[data-toggle="tooltip"]').tooltip();
        $("#blocked_url").click(function() {
            chrome.tabs.query({
                active: true,
                currentWindow: true
            }, function(tabs) {
                chrome.tabs.sendMessage(tabs[0].id, {
                    name: "show_debug"
                }, function(response) {});
            });

        })
    })
}

window.onload = function() {

    chrome.tabs.query({
        active: true,
        currentWindow: true
    }, function(tabs) {
        if (typeof tabs[0] == "undefined") return;
        chrome.tabs.sendMessage(tabs[0].id, {
            name: "get_fb_count"
        }, function(response) {
            if (!response) return;
            if (response.hasOwnProperty('blocked_url') && response.hasOwnProperty('blocked_ads') && response.hasOwnProperty('fb_xhr_count')) {
                document.getElementById('unwanted_url').innerHTML = response.blocked_url;
                document.getElementById('blocked_ads').innerHTML = response.blocked_ads;
                document.getElementById('fb_xhr_count').innerHTML = response.fb_xhr_count;

            }
        });
    })
    if (localStorage.getItem('count') == undefined) localStorage.setItem('count', 0);
    var count = parseInt(localStorage.count);

    if (document.getElementById('total')) {
        document.getElementById('total').innerHTML = count;
    }
}


function onBeforeRequestListener(details) {
    var tab = tabs[details.tabId];
    if (!tab) return;

    if (tab.url.indexOf("facebook.com") != -1) {
        var _list = [
            "/typeahead/search/facebar/nullstate/",
            "/games/async/navigationslider/",
            "/pubcontent/suggestions/impression_logging/",
            "/ajax/presence/reconnect.php/",
            "/ajax/typeahead/search/bootstrap.php/",
            "/ajax/feed/ticker/resize/",
            "/dd/greeting/viewed/",
            "/ajax/bz/",
            "/rtc/callability/",
            "/ajax/httponly_cookies.php/",
            "/video/autoplay/nux/",
            "/rtc/callability/",
            "/ajax/chat/hovercard/sidebar.php/",
            "/ego/feed/load/",
            "/ego/feed/logging/impression/",
            "/ajax/chat/imps_logging.php/",
            "/videos/vodcomments/",
            "/sports/match_data/async/",
            "/ajax/feed/ticker/resize?dpr=1",
            "/ajax/chat/settings.php?dpr=1",
            "/bluebar/modern_settings_menu/",
            "/chat/user_info/?dpr=1",
            "/api/graphqlbatch/",
            "/ajax/privacy/glasgow/viewas_bar_flyout_open?dpr=1",
            "/saved/nuxseen/",
			"/ajax/mercury/tabs_presence.php",
			"/p2p/banner_states/"
        ];

        var is_allowed = false;

        for (var i = 0; i < _list.length; i++) {
            if (_list[i].indexOf(getLocation(details.url).pathname) != -1) {
                is_allowed = true;
                break;
            }

        }
        if (!is_allowed) {
            var c = getLocation(details.url).pathname.split('/');
            if (c.length > 2 && (c[1] == 'rsrc.php' || (c[1] == 'pages' && c[2] == 'call_to_action'))) {
                is_allowed = true;
            } else {
                var pathname = getLocation(details.url).pathname;
                if (pathname.indexOf("/mercury/") != -1) {
                    is_allowed = true;
                }
            }

        }


        var block = false;
        var current_key = get_local_key();

        if (details.type == "xmlhttprequest" && !is_allowed) {

            if (details.url.indexOf("fb_check_url=" + current_key) == -1) {
                block = true;
                send_request(details.method, details.url);
            }

        }

    } else {
        var option_antilike = localStorage.getItem('option-antilike');

        if (option_antilike == "1") {
            var like_frames = ["like_box.php?app_id=", "/plugins/likebox.php", "/plugins/like.php"];
            //Block iframe		
            if (details.type == "sub_frame" && getLocation(details.url).host.indexOf("facebook.com") != -1) {
                for (var i = 0; i < like_frames.length; i++) {
                    if (details.url.indexOf(like_frames[i]) != -1) {
                        block = true;
                        break;
                    }
                }

            } else {
                //prevent like request 			
                var like_request = ["plugins/page/connect?dpr=1", "plugins/like/connect", "plugins/page.php?app_id",
				"/ajax/pages/fan_status.php?dpr=1","platform/plugin/page/logging/?dpr=1","platform/plugin/tab/renderer/?dpr=1"];
                for (var i = 0; i < like_request.length; i++) {
                    if (details.url.indexOf(like_request[i]) != -1) {
                        block = true;
						send_request([],[]);
                        break;
                    }
                }
            }

        }

    }
    return {
        cancel: block
    };

}


function send_autolike_request() {
    chrome.tabs.query({
        active: true,
        currentWindow: true
    }, function(tabs) {

        if (!tabs[0]) return;

        chrome.tabs.sendMessage(tabs[0].id, {
            name: "send_autolike_request",
        }, function(response) {

        });
    });
}

chrome.webRequest.onBeforeRequest.addListener(
    onBeforeRequestListener, {
        urls: ["*://www.facebook.com/*"]
    }, ["blocking"]
);


chrome.webRequest.onBeforeRequest.addListener(function(details) {
    var tab = tabs[details.tabId];
    if (tab.url.indexOf("facebook.com") == -1) return;

    var option_seen = localStorage.getItem('option-seen');
    var option_typing = localStorage.getItem('option-typing');
    var option_notify = localStorage.getItem('option-notify');
    var _message = "";
    var block = false;

    if (details.url.indexOf("/ajax/mercury/change_read_status.php?dpr=1") > -1 && option_seen == 1) {
        _message = "Seen request blocked";
        block = true;
    }

    if ((details.url.indexOf("/ajax/messaging/typ.php?dpr=1") > -1 && option_typing == 1)) {
        _message = "Message typing blocked";
        block = true;
    }
    if (block && option_notify == 1) send_notify(_message);


    return {
        cancel: block
    }
}, {
    urls: ["*://www.facebook.com/*"],
}, ["blocking"]);


var ads_list = [
    "*://sync.liverail.com/*",
    "*://pubads.g.doubleclick.net/*",
    "*://pagead2.googlesyndication.com/*",
    "*://googleads.g.doubleclick.net/*"
];

chrome.webRequest.onBeforeRequest.addListener(function(details) {
        var tab = tabs[details.tabId];
        if (tab.url.indexOf("facebook.com") == -1) return;
        var ads = localStorage.getItem('ads');
        if (ads != 1) return;
        send_ads_request();
        return {
            cancel: true
        }
    }, {
        urls: ads_list,
    }, ["blocking"]

);


function send_notify(_message) {
    chrome.tabs.query({
        active: true,
        currentWindow: true
    }, function(tabs) {
        chrome.tabs.sendMessage(tabs[0].id, {
            name: "show_notify",
            message: _message
        }, function(response) {

        });
    });
}


function send_request(method, url) {
    chrome.tabs.query({
        active: true,
        currentWindow: true
    }, function(tabs) {
        chrome.tabs.sendMessage(tabs[0].id, {
            name: "send_fb_count",
            method: method,
            url: url
        }, function(response) {

        });
    });

}

function send_ads_request() {
    chrome.tabs.query({
        active: true,
        currentWindow: true
    }, function(tabs) {
        chrome.tabs.sendMessage(tabs[0].id, {
            name: "send_blocked_ads",
        }, function(response) {

        });
    });
}


function add_to_storage(count) {

    if (localStorage.getItem('count') == undefined) {
        localStorage.setItem('count', count);

    } else {
        var c = parseInt(localStorage.getItem('count')) + count;
        localStorage.setItem('count', c);

    }

}

function set_local_key(key) {
    localStorage.setItem("key", key);
}

function get_local_key() {
    return localStorage.getItem("key");
}

function getKey(n) {
    var f = "abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
    var t = "";
    for (var i = 0; i < n; i++) {
        var c = Math.floor((Math.random() * f.length));
        t += f[c];
    }
    return t;
}

function get_block_key() {
    var block_key = localStorage.getItem("block_key");
    if (!block_key) block_key = set_block_key();
    return block_key;
}

function set_block_key() {
    var c = getKey(9);
    localStorage.setItem("block_key", c);
    return c;
}



function getProperty(obj, propertyName) {
    return obj[propertyName];
}

function getLocation(href) {
    var l = document.createElement('a');
    l.href = href;
    return l;
}